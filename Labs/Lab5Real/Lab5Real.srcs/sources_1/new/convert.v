`timescale 1ns / 1ps

module convert(input [3:0] sum, output reg [6:0] C);

    always @*
        case(sum)
            4'b0000:
                C=7'b0000001; // 0
            4'b0001:
                C=7'b1001111; // 1
            4'b0010:
                C=7'b0010010; // 2
            4'b0011:
                C=7'b0000110; // 3
            4'b0100:
                C=7'b1001100; // 4
            4'b0101:
                C=7'b0100100; // 5
            4'b0110:
                C=7'b0100000; //  6
            4'b0111:
                C=7'b0001111; // 7
            4'b1000:
                C=7'b0000000; // 8
            4'b1001:
                C=7'b0000100; // 9
            4'b1010:
                C=7'b0001000; // A
            4'b1011:
                C=7'b1100000; // B = b
            4'b1100:
                C=7'b0110001; // C
            4'b1101:
                C=7'b1000010; // D = d
            4'b1110:
                C=7'b0110000; // E
            4'b1111:
                C=7'b0111000; // F
            default: 
                C=7'b0000000;
        endcase
endmodule